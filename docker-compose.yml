services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-dzutech}
      POSTGRES_USER: ${DB_USER:-dzutech}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dzutech-password}
    ports:
      - '${DB_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-dzutech} -d ${DB_NAME:-dzutech}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgresql://${DB_USER:-dzutech}:${DB_PASSWORD:-dzutech-password}@db:5432/${DB_NAME:-dzutech}
      ALLOWED_ORIGIN: "${ALLOWED_ORIGIN:-http://localhost:4173,http://localhost:5173,http://0.0.0.0:4173,http://0.0.0.0:5173}"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '4000:4000'
    restart: unless-stopped

  website:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    environment:
      NODE_ENV: production
    ports:
      - '4173:4173'
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
