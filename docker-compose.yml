services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: "${DB_PASSWORD:?DB_PASSWORD must be set}"
    ports:
      - '${DB_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: .
      dockerfile: server/Dockerfile
    env_file:
      - ./server/.env
    environment:
      NODE_ENV: production
      PORT: ${PORT:-4000}
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD:?DB_PASSWORD must be set}@db:5432/${DB_NAME}"
      ALLOWED_ORIGIN: ${ALLOWED_ORIGIN}
      SESSION_SECRET: ${SESSION_SECRET:?SESSION_SECRET must be set}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '4000:4000'
    restart: unless-stopped
    volumes:
      - ./server/uploads:/app/uploads

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    restart: unless-stopped

  website:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    environment:
      NODE_ENV: production
    ports:
      - '4173:4173'
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data: null
  minio_data: null
